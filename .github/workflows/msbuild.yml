name: MSBuild

on:
  push:
    branches: [ "autobuild" ]
  pull_request:
    branches: [ "autobuild" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH_LIBISDB: ./src/LibISDB/Projects/LibISDB.sln
  SOLUTION_FILE_PATH_TVTEST: ./src/TVTest.sln
  SOLUTION_FILE_PATH_TVTESTSDK_SAMPLES: ./sdk/Samples/Samples.sln

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        build-platform: [x64, x86]
        crt-type: [dynamic, static]
        include:
          - crt-type: dynamic
            build-configuration-tvtest: Release_MD
            build-configuration-sdksample: Release
          - crt-type: static
            build-configuration-tvtest: Release
            build-configuration-sdksample: Release_static
          - build-platform: x64
            build-platform-msbuild: x64
          - build-platform: x86
            build-platform-msbuild: Win32
        exclude:
          - build-platform: x86
            crt-type: dynamic

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1.3

    - name: Restore NuGet packages (LibISDB)
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH_LIBISDB}}

    - name: Restore NuGet packages (TVTest)
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH_TVTEST}}

    - name: Restore NuGet packages (TVTestSDK Samples)
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH_TVTESTSDK_SAMPLES}}

    - name: Build LibISDB
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{ matrix.build-configuration-tvtest }}  /p:platform=${{ matrix.build-platform-msbuild }} ${{env.SOLUTION_FILE_PATH_LIBISDB}}

    - name: Build TVTest
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{ matrix.build-configuration-tvtest }}  /p:platform=${{ matrix.build-platform-msbuild }} ${{env.SOLUTION_FILE_PATH_TVTEST}}

    - name: Build TVTestSDK Samples
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{ matrix.build-configuration-sdksample }}  /p:platform=${{ matrix.build-platform-msbuild }} ${{env.SOLUTION_FILE_PATH_TVTESTSDK_SAMPLES}}

    - name: package
      run: ./package.sh -a ${BUILD_ARCH} -c ${CRT_TYPE} -l all -o package -r 7z -t release
      shell: bash
      env:
        BUILD_ARCH: ${{ matrix.build-platform }}
        CRT_TYPE: ${{ matrix.crt-type }}

    - name: save artifacts
      uses: actions/upload-artifact@v3
      with:
        name: TVTest ${{ matrix.crt-type }}
        path: ./package/*.7z
